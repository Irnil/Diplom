unit Unit1;

interface

uses
  Winapi.Windows, Winapi.Messages, System.SysUtils, System.Variants, System.Classes, Vcl.Graphics,
  Vcl.Controls, Vcl.Forms, Vcl.Dialogs, IdBaseComponent, IdComponent,
  IdTCPConnection, IdTCPClient, IdHTTP, Vcl.ExtCtrls, Vcl.StdCtrls, IdIOHandler,
  IdIOHandlerSocket, IdIOHandlerStack, IdSSL, IdSSLOpenSSL;

type
  TForm1 = class(TForm)
    GroupBox1: TGroupBox;
    LoginEdit: TEdit;
    PassEdit: TEdit;
    Label1: TLabel;
    Label2: TLabel;
    Button1: TButton;
    GroupBox2: TGroupBox;
    GroupEdit: TEdit;
    Label3: TLabel;
    MessageMemo: TMemo;
    AttachEdit: TEdit;
    Label4: TLabel;
    GroupBox3: TGroupBox;
    LogMemo: TMemo;
    StartButton: TButton;
    Timer1: TTimer;
    IdHTTP1: TIdHTTP;
    IdSSLIOHandlerSocketOpenSSL1: TIdSSLIOHandlerSocketOpenSSL;
    procedure GetToken;
    procedure Button1Click(Sender: TObject);
    procedure StartButtonClick(Sender: TObject);
    procedure Timer1Timer(Sender: TObject);
    function  Pars(st,st_begin,st_end:WideString):WideString;
  private
    { Private declarations }
  public
    { Public declarations }
  end;

var
  Form1: TForm1;
  token:string;

implementation

{$R *.dfm}

procedure TForm1.Button1Click(Sender: TObject);
begin
  GetToken;
end;

procedure TForm1.StartButtonClick(Sender: TObject);
begin
  if length(token)>0 then timer1.Enabled:=true;

end;

procedure TForm1.Timer1Timer(Sender: TObject);
var
  response:string;
  id:string;
  pos1:integer;
  Info: TStringList;
begin
  timer1.Enabled:=false;
  // Получаем ID последнего поста  
  try
    response:=idhttp1.Get('https://api.vk.com/method/wall.get?owner_id=-'+GroupEdit.text+'&access_token='+token);
  except
    logmemo.Lines.Add('Ошибка получения ID поста');
  end;
  id:=pars(response,'"id":',',"');
  sleep(500);
  // Удаляем последний пост
  if length(id)>0 then
    begin
    try
      response:=idhttp1.Get('https://api.vk.com/method/wall.delete?owner_id=-'+GroupEdit.text+'&post_id='+id+'&access_token='+token);
    except
      logmemo.Lines.Add('Ошибка удаления поста');
    end;
  end;
  sleep(500);
  // Создаем новый пост
  try
    Info := TStringList.Create;
    Info.Add('owner_id=-'+GroupEdit.text);
    Info.Add('from_group=1');
    Info.Add('access_token='+token);
    Info.Add('message='+messagememo.text);
    Info.Add('attachments='+attachedit.text);
    
    response:=idhttp1.Post('https://api.vk.com/method/wall.post',Info);
  except
    logmemo.Lines.Add('Ошибка создания поста');
  end;  
//  logmemo.Lines.Add(id);

  logmemo.Lines.Add(response);
  Info.Free;
end;

function TForm1.Pars(st,st_begin,st_end:WideString):WideString;
begin

  if pos(st_begin,st)<>0 then
    Delete(st,1,pos(st_begin,st)+length(st_begin)-1)
  else
  begin
    Pars:='';
    exit;
  end;
  if pos(st_end,st)<>0 then
    Delete(st,pos(st_end,st),length(st))
  else
  begin
    Pars:='';
    exit;
  end;
    Pars:=st;
  end;

procedure TForm1.GetToken;
var
  temp: string;
  response:string;
begin


  try
    response:=idhttp1.Get('https://oauth.vk.com/token?grant_type=password&client_id=2274003&scope=wall&client_secret=hHbZxrka2uZ6jB1inYsH&username='+LoginEdit.Text+'&password='+PassEdit.text);
  except
    logmemo.Lines.Add('ошибка соединения при получении access token');

  end;

  if Pos('token', response)<>0 then begin
    temp:=copy(response, pos('access_token":"', response), pos('","expires_in', response)-3);
    delete(temp, 1, 15);
    token:=temp;
    logmemo.Lines.Add('token получен');
  end
  else
  begin
    logmemo.Lines.Add('token не получен');
  end;

end;

end.

